/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.ImageIcon;

/**
 *
 * @author herned1
 */
public class PnlFondo extends javax.swing.JPanel {

    /**
     * Creates new form PnlFondo
     */
    public PnlFondo() {
        initComponents();
        this.setSize(1920,1010);
    }
    
    public void paintComponent(Graphics g) {
        
        Dimension tamanio = getSize();
        ImageIcon imgFondo = new ImageIcon(getClass().getResource("/imagenes/fondo_Gris.jpg"));
        g.drawImage(imgFondo.getImage(), 0, 0, tamanio.width, tamanio.height, null);
        setOpaque(false);
        super.paintComponent(g);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * 
     * 
     * 
     * 
     * 
     * 
     * 
     * 
     * 
     * //Proceso del tiempo
    @Override
    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == h1) {
            mensaje();
            saludo();
            calcula();
            lbHora.setText(hora + ":" + minutos + ":" + segundos + " " + ampm);

            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
            }
        }
    }

    //Reloj de formato 12 hrs
    public void calcula() {
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();

        calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == Calendar.AM ? "AM" : "PM";

        if (ampm.equals("PM")) {
            int h = calendario.get(Calendar.HOUR_OF_DAY) - 12;
            hora = h > 9 ? "" + h : "0" + h;
        } else {
            hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        }
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);

    }

    //Test de Switch
    public void mensaje() {
        Calendar horaActual = Calendar.getInstance();
        Calendar minActual = Calendar.getInstance();

        switch (horaActual.get(Calendar.HOUR_OF_DAY)) {
            case 8:	
            case 9:
            case 10:
            case 12:
            case 13:
            case 18: // extra switch de comida de tarde
                switch (minActual.get(Calendar.MINUTE)) {
                    case 15:
                        //System.out.println("funcionando");
                        lbMsj.setText("Herrajes, Interiores");
                    case 25:
                        lbMsj.setText("Herrajes, Interiores, Produccion Planta 2");
                    case 30:
                        lbMsj.setText("Interiores,Produccion Planta 2, Pulido");
                    case 40:
                        lbMsj.setText("Produccion Planta 2, Pulido, Acabado");
                    case 50:
                        lbMsj.setText("Pulido, Acabado, Cajones");
                        break;
                }
            case 19:// extra switch de comida de tarde
                switch (minActual.get(Calendar.MINUTE)) {
                    case 10:

                        lbMsj.setText("Acabado, Cajones, Small Parts");
                    case 15:

                        lbMsj.setText("Cajones, Small Parts, Tapas");
                    case 25:
                        lbMsj.setText("Small Parts, Tapas");
                    case 30:
                        lbMsj.setText("Administrativos, Intendencia");
                        break;
                }
            case 21: // extra switch de cena
                switch (minActual.get(Calendar.MINUTE)) {
                    case 55:
                        lbMsj.setText("Herrajes, Interiores");
                        break;
                }
            case 22:// extra switch de cena
                switch (minActual.get(Calendar.MINUTE)) {
                    case 05:
                        lbMsj.setText("Herrajes, Interiores, Produccion Planta 2");
                    case 10:
                        lbMsj.setText("Interiores,Produccion Planta 2, Pulido");
                    case 20:
                        lbMsj.setText("Produccion Planta 2, Pulido, Acabado");
                    case 30:
                        lbMsj.setText("Pulido, Acabado, Cajones");
                    case 45:
                        lbMsj.setText("Cajones, Small Parts");
                    case 50:
                        lbMsj.setText("Cajones, Small Parts, Tapas");
                        break;
                }
            case 23:// extra switch de cena 
                switch (minActual.get(Calendar.MINUTE)) {
                    case 00:
                        lbMsj.setText(" Tapas, Administrativos, Intendencia");
                        break;
                }
                break;
        }
    }

/////////////////////////////////////////////////////////
    public void saludo() {
        Calendar calendario = new GregorianCalendar();

        int h23, h24;

        h23 = calendario.get(Calendar.HOUR_OF_DAY);
        h24 = calendario.get(Calendar.MINUTE);

        if (h23 == 00) {
            if (h24 == 5) {
                lbSaludo.setText("Buenos Dias");
            }
        }

        if (h23 == 12) {
            if (h24 == 00) {
                lbSaludo.setText("Buenas Tardes");
            }
        }

        if (h23 == 20) {
            if (h24 == 00) {
                lbSaludo.setText("Buenas Noches");
            }
        }

    }
     * 
     * 
     * 
     * 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
